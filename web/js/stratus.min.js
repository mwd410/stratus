/*! stratus-dev v0.2.0 : 2013-10-23 */
!function(ng){"use strict";ng.module("app",["ui.router","app.account","app.breakdown","app.dashboard","app.nav","app.utils"]).config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/main/overview"),$stateProvider.state("app",{url:"/main",templateUrl:"partials/app.html"}).state("app.overview",{url:"/overview",templateUrl:"partials/overview.html"}).state("app.breakdown",{url:"/breakdown",templateUrl:"partials/breakdown.html"}).state("app.chargeback",{url:"/chargeback",templateUrl:"partials/chargeback.html"}).state("app.alerts",{url:"/alerts",templateUrl:"partials/alerts.html"}).state("app.reports",{url:"/reports",templateUrl:"partials/reports.html"}).state("app.savings",{url:"/savings",templateUrl:"partials/savings.html"}).state("app.profile",{url:"/profile",templateUrl:"partials/profile.html"}).state("app.providers",{url:"/providers",templateUrl:"partials/providers.html"})}),ng.module("app.account",["ngAnimate"]),ng.module("app.breakdown",[]),ng.module("app.dashboard",[]),ng.module("app.nav",[]),ng.module("app.utils",[])}(window.angular),angular.module("app").controller("MenuController",function($scope,NavService){$scope.menu=NavService}),$.fn.padding=function(){var i,direction,dirPadding,match,unit,value,directions=["top","right","bottom","left"],regex=/(\d+)(em)?/,result={};for(i=0;i<directions.length;++i)direction=directions[i],dirPadding=this.css("padding-"+direction),match=dirPadding.match(regex),value=match[1],unit=match[2],"em"===unit&&(value=ConvertEmToPx(value)),result[direction]=value;return result},function(ng){"use strict";ng.module("app").controller("RegisterController",function($scope,$http){$scope.emailAvailable=!0,$scope.validateRegistration=function(){$scope.registerForm.email.$valid&&$http.post("/isEmailAvailable",{email:$scope.email}).success(function(result){$scope.emailAvailable=result.available})}})}(window.angular),function(ng){"use strict";ng.module("app").directive("stAutoSize",function(){return{link:function(scope,el,attrs){function applyHeight(){var windowHeight=window.innerHeight,height=windowHeight-el.offset().top-bottomSpace;el.height(height);var padding=height-40+"px";el.css("padding-bottom",padding)}var bottomSpace=attrs.stAutoSize?parseInt(attrs.stAutoSize):20;ng.element(window).bind("resize",function(){scope.$apply(function(){applyHeight()})}),applyHeight()}}})}(window.angular),function(ng){"use strict";ng.module("app").directive("stLeftNav",function(){return{controller:function($scope,NavService){NavService.registerMenu("left"),$scope.isExpanded=function(){return NavService.isExpanded("left")}},templateUrl:"/js/app/stLeftNav.html",replace:!0,scope:{menus:"=stLeftNav",onItemClick:"&",onSubItemClick:"&",isItemActive:"&",isSubItemActive:"&"},link:function(scope,el,attrs){attrs.isItemActive&&!attrs.isSubItemActive&&(scope.isSubItemActive=function(o){return scope.isItemActive({item:o.subItem})}),attrs.onItemClick&&!attrs.onSubItemClick&&(scope.onSubItemClick=function(o){scope.onItemClick({item:o.subItem})})}}})}(window.angular),function(ng){"use strict";ng.module("app.account").directive("stAccount",function(){var CLOSED=0,EDIT=2,SAVE=4;return{controller:function($scope){var state=CLOSED;$scope.edit=function(){state=EDIT},$scope.isSaving=function(){return state===SAVE},$scope.isModifying=function(){return state!==CLOSED},$scope.isEditing=function(){return state===EDIT},$scope.cancel=function(){state=CLOSED,ng.copy($scope.originalAccount,$scope.account),ng.copy($scope.originalMaster,$scope.master)},$scope.submit=function(){state=SAVE},$scope.setMaster=function(isMaster){$scope.master.account_id=isMaster?$scope.account.id:null}},scope:{account:"=stAccount",master:"="},templateUrl:"/js/app/account/tpl/stAccount.html",replace:!0,link:function(scope,el){var readjustSize=function(isModifying){var body=el.find(".st-account-body"),form=body.find("form"),padding=form.parents("li").padding(),ul=form.parents("ul"),height=ul.outerHeight()-padding.top-padding.bottom;if(isModifying){form.css("height",height-1),body.css("max-height",height-1),ul.scrollTop(ul.scrollTop()+el.position().top);var intervalId=setInterval(function(){ul.scrollTop(ul.scrollTop()+el.position().top)},10);setTimeout(function(){clearInterval(intervalId)},300)}else body.css("max-height",0),ul.css("overflow","auto"),ul.css("padding-bottom","0")};scope.originalMaster=ng.copy(scope.master),scope.originalAccount=ng.copy(scope.account),scope.$watch("isModifying()",readjustSize),scope.ulHeight=function(){return el.parents("ul").outerHeight()},scope.$watch("ulHeight()",function(){readjustSize(scope.isModifying())})}}})}(window.angular),function(ng){"use strict";ng.module("app.account").controller("AccountManagementController",["$scope","$http","AccountService",function($scope,$http,AccountService){$scope.accounts=AccountService.all,$scope.newAccountId="",$scope.commitMaster=function(){$scope.originalMasterAccount=angular.copy($scope.masterAccount)},$scope.add=function(){$scope.accounts.unshift({id:$scope.newAccountId,name:"",aws_key:"",secret_key:""})}}])}(window.angular),function(ng){"use strict";ng.module("app.account").controller("AccountController",function($scope,$http){function save(){angular.copy($scope.account,master),$scope.commitMaster()}function commitNew(){$http.post("/account/add",{account:$scope.account,master:$scope.masterAccount}).success(function(result){result.success===!0&&(isNew=!1,save())})}function commitModified(){$http.post("/account/edit",{account:$scope.account,master:$scope.masterAccount}).success(function(result){result.success===!0&&(isModified=!1,save())})}function commitPendingDelete(){$http.post("/account/delete",{id:$scope.account.id}).success(function(result){result.success===!0&&$scope.accounts.splice($scope.account,1)})}$scope.fv={aws_key:{length:20},secret_key:{length:40}};var master=angular.copy($scope.account),isNew=$scope.account.id==$scope.newAccountId,isModified=!1,isPendingDelete=!1;$scope.isAdding=function(){return isNew},$scope.isEditing=function(){return isModified},$scope.isDeleting=function(){return isPendingDelete},$scope.isModifying=function(){return $scope.isAdding()||$scope.isEditing()||$scope.isDeleting()},$scope.edit=function(){isModified=!0},$scope.delete=function(){isPendingDelete=!0},$scope.commit=function(){isNew?commitNew():isModified?commitModified():isPendingDelete&&commitPendingDelete()},$scope.cancel=function(){isNew?$scope.accounts.splice($scope.account,1):angular.copy(master,$scope.account),isNew=!1,isModified=!1,isPendingDelete=!1}})}(window.angular),function(ng){"use strict";var CLOSED=0,NEW=1,EDIT=2,DELETE=3,SAVE=4,Account=function(data){for(var key in data)data.hasOwnProperty(key)&&(this[key]=data[key]);this._state=CLOSED};Account.prototype={edit:function(){this._state=EDIT},isSaving:function(){return this._state===SAVE},isModifying:function(){return-1!==[EDIT,NEW,DELETE].indexOf(this._state)},isEditing:function(){return this._state===EDIT},cancel:function(){this._state=CLOSED},submit:function(){this._state=SAVE}},ng.module("app.account").service("AccountService",function($http){var serverData,master,allAccounts=[];return $http.get("/getAccounts").success(function(response){serverData=response;var copy=ng.copy(serverData);master=copy.masterAccount,allAccounts=copy.accounts}),{all:allAccounts}})}(window.angular),function(ng){"use strict";ng.module("app.breakdown").controller("BreakdownCtrl",function($scope,breakdown){$scope.dashboard={widgetRows:[{height:70,widgetColumns:[{flex:1,widgets:[{flex:1,miniTitle:"Monthly Projection",type:"eomProjection",templateFile:"kpi.html"}]},{flex:1,widgets:[{flex:1,miniTitle:"Last Month Spend",type:"lastMonthSpend",templateFile:"kpi.html"}]},{flex:1,widgets:[{flex:1,miniTitle:"30 Day Rolling Average",type:"rollingAverage",params:{days:30},templateFile:"kpi.html"}]},{flex:1,widgets:[{flex:1,miniTitle:"7 Day Rolling Average",type:"rollingAverage",params:{days:7},templateFile:"kpi.html"}]}]}]},$scope.registerWidget=function(widget){breakdown.registerWidget(widget)},$scope.breakdown=breakdown})}(window.angular),function(ng){"use strict";ng.module("app.breakdown").service("BreakdownMenuService",function($http,Utils){return{getAll:function(type){return $http.get("/breakdown/menu",{params:{type:type}}).then(function(response){var data=response.data,result=[],items={},subItems={};return Utils.each(data,function(datum){var item;items.hasOwnProperty(datum.id)||(item={id:datum.id,name:datum.name,type:type,subItems:[]},items[datum.id]=item,subItems[datum.id]=item.subItems,result.push(item)),subItems[datum.id].push({id:datum.id,sub_id:datum.sub_id,name:datum.sub_name,type:type})}),result})}}})}(window.angular),function(ng){"use strict";ng.module("app.breakdown").service("breakdown",function($http,Utils){var service={menus:[],update:function(item){var params={};item&&(params={type:item.type,id:item.id||null,sub_id:item.sub_id||null,widgets:JSON.stringify(widgets)}),$http.post("/breakdown/update",params).then(function(response){item&&(service.title=item.title),service.menus=response.data.menu,ng.copy(response.data.widgets,service.widgetData)})},widgetData:{},registerWidget:function(widget){for(var guid;widgets[guid=Utils.guid()];);widget.guid=guid,widget.params=widget.params||null,widgets[widget.guid]=widget},getData:function(widget){return service.widgetData[widget.guid]}},widgets={};return service.update(),service})}(window.angular),function(ng){"use strict";ng.module("app.breakdown").controller("BreakdownNavCtrl",function($scope,NavService,breakdown){$scope.breakdown=breakdown;var last=null;$scope.onMenuItemClick=function(item){last=item,breakdown.update(item)},$scope.isItemActive=function(item){return item.isActive}})}(window.angular),function(ng){"use strict";ng.module("app.dashboard").directive("stDash",function(){return{require:"stDash",scope:{dash:"=stDash",registerWidget:"&",widgetService:"="},controller:function($scope,NavService,breakdown){$scope.isLeftExpanded=function(){return NavService.isExpanded("left")},$scope.getTitle=function(){return breakdown.title},this.registerWidget=function(widget){$scope.registerWidget({widget:widget})}},link:function(){}}})}(window.angular),function(ng){"use strict";ng.module("app.dashboard").directive("stWidgetRow",function(Utils){return{scope:{widgetRow:"=stWidgetRow",widgetService:"="},controller:function(){},link:function(scope){var totalFlex=Utils.pluck(scope.widgetRow.widgetColumns,"flex").reduce(function(prev,curr){return parseInt(prev,10)+parseInt(curr,10)});Utils.each(scope.widgetRow.widgetColumns,function(column){column.width=100*column.flex/totalFlex},this)}}})}(window.angular),function(ng){"use strict";ng.module("app.dashboard").directive("stWidgetColumn",function(Utils){return{controller:function(){},scope:{widgetColumn:"=stWidgetColumn",widgetService:"="},link:function(scope){if(scope.widgetColumn.widgets){var totalFlex=Utils.pluck(scope.widgetColumn.widgets,"flex").reduce(function(prev,curr){return parseInt(prev,10)+parseInt(curr,10)});Utils.each(scope.widgetColumn.widgets,function(widget){widget.height=100*widget.flex/totalFlex},this)}}}})}(window.angular),function(ng){"use strict";ng.module("app.dashboard").directive("stWidget",function(){return{require:["stWidget","^stDash"],scope:{widget:"=stWidget",widgetService:"="},controller:function(){},link:function(scope){scope.widgetService.registerWidget(scope.widget),scope.$watch("widgetService.getData(widget)",function(data){data&&(scope.widget.tpl="/partials/widget/"+scope.widget.templateFile,scope.widget.data=data)})}}})}(window.angular),function(ng){"use strict";ng.module("app.nav").service("NavService",function($state){var menus={app:[{state:"app.overview",name:"Overview"},{state:"app.breakdown",name:"Breakdown"},{state:"app.chargeback",name:"Chargeback"},{state:"app.alerts",name:"Alerts"},{state:"app.reports",name:"Reports"},{state:"app.savings",name:"Savings"}],config:[{name:"Profile",iconCls:"icon-cog",state:"app.profile"},{name:"Providers",state:"app.providers",iconCls:"icon-list-ul"},{name:"Logout",iconCls:"icon-signout",href:"/logout"}]},expandedMenu=null,availableMenus={};return{registerMenu:function(menu){if(availableMenus[menu])throw new Error("You've registered the same menu twice: "+menu);availableMenus[menu]=!0},isAvailable:function(menu){return!!availableMenus[menu]},isExpanded:function(menu){return expandedMenu===menu},expandMenu:function(menu){expandedMenu=expandedMenu===menu?null:menu},getMenuItems:function(){var items;return"app"===$state.current.name.slice(0,3)&&(items=menus.app),availableMenus.main=items&&items.length>0,items},getConfigItems:function(){var items;return"app"===$state.current.name.slice(0,3)&&(items=menus.config),availableMenus.config=items&&items.length>0,items},isActive:function(item){return $state.current.name===item.state}}})}(window.angular),function(ng){"use strict";ng.module("app.nav").controller("NavController",function($scope,NavService,$state){$scope.menu=NavService,$scope.menuItems=NavService.getMenuItems(),$scope.$state=$state,$scope.isAvailable=function(menu){return NavService.isAvailable(menu)},$scope.expandMenu=function(menu){NavService.expandMenu(menu)},$scope.isExpanded=function(menu){return NavService.isExpanded(menu)}})}(window.angular),function(ng){"use strict";ng.module("app.utils").service("Utils",[function(){var Utils={apply:function(obj,vals){for(var key in vals)obj[key]=vals[key];return obj},applyIf:function(obj,vals){for(var key in vals)key in obj||(obj[key]=vals[key])},isArray:"isArray"in Array?Array.isArray:function(value){return"[object Array]"===Object.prototype.toString.call(value)},each:function(array,fn,scope){if(Utils.isArray(array)){for(var i=0,len=array.length;len>i;++i)if(!1===fn.call(scope||array[i],array[i],i,len))return i}else array&&fn.call(scope||array,array,0,1);return!0},eachKey:function(object,fn,scope){for(var key in object)fn.call(scope||object[key],object[key],key)},pluck:function(array,property){var plucked=[];return Utils.each(array,function(item){plucked.push(item[property])}),plucked},guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=0|16*Math.random(),v="x"==c?r:8|3&r;return v.toString(16)})}};return Utils}])}(window.angular);