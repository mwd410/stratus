@accentColor : #019EE1;
@mainColor : #fff;

.opacity(@percent) {
  /* found at http://css-tricks.com/snippets/css/cross-browser-opacity/ */
  /* IE 8 */
  -ms-filter     : "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{percent})";
  /* IE 5-7 */
  filter         : alpha(opacity=@percent);
  /* Netscape */
  -moz-opacity   : (@percent / 100);
  /* Safari 1.x */
  -khtml-opacity : (@percent / 100);
  /* Good browsers */
  opacity        : (@percent / 100);
}

.border {
  border : 1px solid #BBB;
}

.box-shadow(@style, @c) when (iscolor(@c)) {
  box-shadow         : @style @c;
  -webkit-box-shadow : @style @c;
  -moz-box-shadow    : @style @c;
}

.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {
  .box-shadow(@style, rgba(0, 0, 0, @alpha));
}

.border-radius (@radius: 5px) {
  -webkit-border-radius : @radius;
  -moz-border-radius    : @radius;
  -ms-border-radius     : @radius;
  -o-border-radius      : @radius;
  border-radius         : @radius;
}

.transition(@style) {

  -webkit-transition : @style;
  -moz-transition    : @style;
  -ms-transition     : @style;
  -o-transition      : @style;
  transition         : @style;
}

.expandDown.ng-hide-add,
.expandDown.ng-hide-remove {
  .transition(0.5s linear all);
  transform-origin : top;
  overflow         : hidden;
  display          : block !important;
}

.expandDown.ng-hide-add.ng-hide-add-active,
.expandDown.ng-hide-remove {
  max-height : 0px;
}

.expandDown.ng-hide-remove.ng-hide-remove-active,
.expandDown.ng-hide-add {
  max-height : 250px;
}

.animate-fade.ng-enter,
.animate-fade.ng-leave {
  .transition(500ms linear all);
}

.animate-fade.ng-enter.ng-enter-active,
.animate-fade.ng-leave {
  .opacity(100);
}

.animate-fade.ng-leave.ng-leave-active,
.animate-fade.ng-enter {
  .opacity(0);
}


.blockRight {
  float   : right;
  display : block;
}

@iconSize : 16px;

.icon(@x:0, @y:0) {
  margin              : 0;
  width               : @iconSize;
  height              : @iconSize;
  background-image    : none;
  background-position : -(@x * (@iconSize + 1)) -(@y * (@iconSize + 1));
}

.iconSpriteSheet(@x, @y) {
  .icon(@x, @y);
  background-image : url(img/iconSpriteSheet.png);
}

.iconHover {
  .opacity(50);
  &:hover {
    .opacity(100);
  }
}

.accentHover {
  &:hover {
    background-color : @accentColor;
    color            : @mainColor;
    .box-shadow(0px 2px 2px, 20%);
  }
}

.button {
  text-decoration : none;
  padding         : 5px;
  .border-radius();
  .accentHover;
  .iconHover;
  &:hover {
    text-decoration : none;
  }
}

.icon-space {
  .iconSpriteSheet(3, 7);
}

.icon-save {
  .iconSpriteSheet(2, 0);
}

.icon-edit {
  .iconSpriteSheet(0, 0);
}

.icon-add {
  .iconSpriteSheet(2, 5);
}

.icon-delete {
  .iconSpriteSheet(0, 6);
}

.icon-accept {
  .iconSpriteSheet(0, 7);
}

.icon-cancel {
  .iconSpriteSheet(2, 2);
}

.icon-exclaim {
  .iconSpriteSheet(3, 1);
}

.accountList {
  .accountHeader {
    & > div {
      font-weight : bold;
    }
  }
  .account {
    .border;
    .border-radius();
    margin-bottom : 5px;
    padding       : 10px;
    .accountBody {
      padding-left : 100px;
      label {
        display : inline-block;
        width   : 150px;
      }
    }
    .accountIcons {
      & > a {
        .button;
      }
    }
  }
  .accountColumn(@width:250px) {
    width      : @width;
    text-align : center;
    display    : inline-block;
  }

  .accountName {
    .accountColumn(300px);
  }
  .accountAws {
    .accountColumn;
  }

  .accountSecret {
    .accountColumn(200px);
  }

  .confirmDelete {
    .accountColumn(auto);
  }

  .accountId,
  .accountIcons {
    .accountColumn(150px);
  }
}

form {
  label,
  span {
    line-height : 3px;
  }

  .formError {
    color : red;
    &:before {
      content : '*';
    }
  }
  input[type="checkbox"] {
    height        : 30px;
    margin-bottom : 10px;
  }
}